---
import ReactIcon from "../icons/React.astro";
import AstroIcon from "../icons/AstroIcon.astro";
import Tailwind from "../icons/Tailwind.astro";
import Express from "../icons/Express.astro";
import Mongo from "../icons/Mongo.astro";
import NodeJs from "../icons/NodeJs.astro";
import GODOT from "../icons/Godot.astro";
import GitHubIcon from "../icons/LinkGithub.astro";
import LinkIcon from "../icons/Link.astro";
import NextIcon from "../icons/Next.astro";
import ZustandIcon from "../icons/ZustandIcon.astro";

const TAGS = {
  ASTRO: {
    icon: AstroIcon,
  },
  TAILWIND: {
    icon: Tailwind,
  },
  REACT: {
    icon: ReactIcon,
  },
  NEXT: {
    icon: NextIcon,
  },
  EXPRESS: {
    icon: Express,
  },
  MONGODB: {
    icon: Mongo,
  },
  NODE: {
    icon: NodeJs,
  },
  GODOT: {
    icon: GODOT,
  },
  ZUSTAND: {
    icon: ZustandIcon,
  },
};

const PROJECTS = [
{
    title: "Mi Gimnasio Online",
    description: "Fui contratado junto a un equipo de 4 desarrolladores para lanzar esta aplicacion la cual permite a entrenadores gestionar sus clientes, crear rutinas personalizadas, subir videos de ejercicios y ofrecer planes de nutrición. Estuve a cargo del despliegue, de configurar Supabase, optimizar el SEO en Next.js y mi desafío más grande hasta la fecha: la integración de las pasarelas de pago Mercado Pago y Stripe para la suscripción de los entrenadores. ",
    link: "https://misrutinasonline.com",
    img: "/projects/migimnasioonline.webp",
    tags: [TAGS.NEXT, TAGS.ZUSTAND, TAGS.TAILWIND, TAGS.EXPRESS, TAGS.NODE],
  },
  {
    title: "Igrowker MVP Primera experiencia real",
    description:
      "Participé en el desarrollo de un MVP HealthTech en 4 semanas con metodologías ágiles (SCRUM). Además del maquetado, estuve a cargo del enrutado y manejo de estado global con React (React Router y Zustand). También integré API Rest para autenticación (JWT), manejo de sesiones, y funcionalidades clave como agendar citas y un cuestionario interactivo doctor-paciente. Terminé contribuyendo con más de 16,000 líneas de código.",
    link: "http://mindup-alb-752681500.us-east-1.elb.amazonaws.com",
    github: "https://github.com/igrowker/i004-mindup-front",
    img: "/projects/mindup.webp",
    tags: [TAGS.REACT, TAGS.ZUSTAND, TAGS.TAILWIND],
  },
  {
    title: "YouTube Music Clone",
    description:
      "Un clon de YouTube Music. Inicié este proyecto para aprender las transiciones de vista en Astro, pero también aprendí a utilizar otros frameworks junto con Astro, como React, que usé para implementar la dinámica del reproductor de música, utilizando Zustand como dependencia para el estado global.",
    link: "https://ytmusicclone.netlify.app",
    github: "https://github.com/RodriguezCamilo/ytmusic-clone",
    img: "/projects/ytmusic.webp",
    tags: [TAGS.ASTRO, TAGS.REACT, TAGS.TAILWIND],
  },
  {
    title: "Jump King Clon",
    description:
      "Un clon del famoso juego Jump King, proyecto que desarrollé para comenzar a aprender sobre el desarrollo de videojuegos. Está construido con el motor de videojuegos GODOT Engine. Para este caso, utilicé los sprites y sonidos que Brakeys proporcionó gratuitamente.",
    link: "https://elmasterkam.itch.io/el-rey-del-salto",
    img: "/projects/JumpKing.webp",
    tags: [TAGS.GODOT],
  },
];
---

<section id="projects" class="p-9 gap-6 lg:gap-10 grid grid-cols-1 grid-rows-3">
  {
    PROJECTS.map(({ img, title, description, tags, link, github }) => (
      <article class="group bg-neutral-950 opacity-70 hover:bg-purple-600 duration-200 rounded-lg border-2 border-neutral-900/20 p-2 grid grid-rows-2 sm:grid-rows-1 sm:grid-cols-2 overflow-hidden">
        <a
          href={link}
          target="_blank"
          class="mr-4 hover:opacity-40 duration-200 flex"
        >
          <img
            loading="lazy"
            class="aspect-video rounded-lg object-cover object-center m-2"
            src={img}
            alt={`Captura de pantalla del proyecto ${img}`}
          />
        </a>
        <div class="flex flex-col text-center place-content-center mx-4 justify-evenly">
          <h3 class=" text-3xl lg:text-4xl xl:text-5xl 2xl:text-6xl font-semibold text-purple-600 group-hover:text-neutral-950 mb-2 flex-initial group-hover:underline">
            {title}
          </h3>
          <div class="text-center sm:text-left">
            <p class="text-sm sm:text-lg xl:text-xl 2xl:text-2xl mb-4 text-balance flex-initial text-purple-600 group-hover:text-neutral-950 font-semibold">
              {description}
            </p>
            <ul class="flex  gap-x-2 flex-row ">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs px-2 border-2 border-neutral-900/20 group-hover:border-purple-900`}
                  >
                    <tag.icon class="2xl:size-6 size-4 sm:size-4" />
                  </span>
                </li>
              ))}
            </ul>
          </div>
          <div class="flex place-content-end gap-2 mx-0 sm:mx-4">
            <a href={link} target="_blank">
              <LinkIcon class="2xl:size-8 size-4 sm:size-4 " />
            </a>
            <a href={github} target="_blank">
              <GitHubIcon class="2xl:size-8 size-4 sm:size-4" />
            </a>
          </div>
        </div>
      </article>
    ))
  }
</section>
